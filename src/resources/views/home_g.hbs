{{> header-home}}
<style>
    body {
        margin: 0;
        padding: 0;
    }

    #map {
        position: absolute;
        top: 0;
        bottom: 0;
        width: 100%;
        z-index: index 1;
    }

    .mapboxgl-popup {
        max-width: 400px;
        font: 12px/20px 'Helvetica Neue', Arial, Helvetica, sans-serif;
    }
</style>
<div id="map"></div>
<script>
    mapboxgl.accessToken = 'pk.eyJ1IjoiZ2JhbzQ3IiwiYSI6ImNscHBneGhzcDB3cjkyaXFuaHlhN3Jxcm0ifQ.l74B2ZgynwxH8OhjplzVmg';

    // Get the user's current location
    navigator.geolocation.getCurrentPosition(successLocation, errorLocation, {
        enableHighAccuracy: true
    });
    function successLocation(position) {
        const { longitude, latitude } = position.coords;

        const map = new mapboxgl.Map({
            container: 'map', // container ID
            center: [longitude, latitude], // starting position [lng, lat]
            zoom: 15 // starting zoom

        });
        // Add markers to the map based on the data passed from the server
        const data = {{{ locationData }}}; // Use triple-stashes
    // data.forEach(location => {
    // const marker1 = new mapboxgl.Marker()
    //     .setLngLat([106.7116703,10.8429868])
    //     .addTo(map);
    //  });

    map.on('load', () => {

        //thêm các điểm vào object
        var feature = [];
        data.forEach(location => {
            let title = '<strong>' + location.type + '</strong>';
            let descrip = '<p>' + location.detail + '</p>';
            let address = '<p>' + location.address + ', Phường ' + location.ward + ', Quận ' + location.district + '</p>';
            let type = '<strong>Chưa huy hoạch</strong>';
            if (location.condition == 1) {
                type = '<strong>Đã huy hoạch</strong>';
            }
            let detailPopup = {
                'type': 'Feature',
                'properties': {
                    'description': title + descrip + address + type,
                },
                'geometry': {
                    'type': 'Point',
                    'coordinates': [location.coordinates.y, location.coordinates.x]
                }
            };
            feature.push(detailPopup);    
        });
        //thêm điểm vào map
        map.addSource('places', {
            'type': 'geojson',
            'data': {
                'type': 'FeatureCollection',
                'features': feature,
            }
        })
        // Add a layer showing the places.
        map.addLayer({
            'id': 'places',
            'type': 'circle',
            'source': 'places',
            'paint': {
                'circle-color': '#4264fb',
                'circle-radius': 6,
                'circle-stroke-width': 2,
                'circle-stroke-color': '#ffffff'
            }
        });

        // Create a popup, but don't add it to the map yet.
        const popup = new mapboxgl.Popup({
            closeButton: false,
            closeOnClick: false
        });

        map.on('mouseenter', 'places', (e) => {
            // Change the cursor style as a UI indicator.
            map.getCanvas().style.cursor = 'pointer';

            // Copy coordinates array.
            const coordinates = e.features[0].geometry.coordinates.slice();
            const description = e.features[0].properties.description;

            // Ensure that if the map is zoomed out such that multiple
            // copies of the feature are visible, the popup appears
            // over the copy being pointed to.
            while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {
                coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;
            }

            // Populate the popup and set its coordinates
            // based on the feature found.
            popup.setLngLat(coordinates).setHTML(description).addTo(map);
        });

        map.on('mouseleave', 'places', () => {
            map.getCanvas().style.cursor = '';
            popup.remove();
        });
    });

    }

    function errorLocation() {
        // Default location (if user denies location access)
        const map = new mapboxgl.Map({
            container: 'map', // container ID
            center: [-74.5, 40], // starting position [lng, lat]
            zoom: 12 // starting zoom
        });
    }



</script>